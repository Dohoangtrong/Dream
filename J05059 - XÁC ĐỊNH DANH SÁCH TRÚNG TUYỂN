controller/Main.java
package controller;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;


public class Main {
    public static void main(String[] args) throws ParseException {
        Scanner sc = new Scanner(System.in);
        ArrayList<Student> arr = new ArrayList<>();
        int t = sc.nextInt();
        for ( int i = 0; i < t; i ++ ){
            sc.nextLine();
            Student x = new Student(sc.nextLine(), sc.nextLine(), sc.nextDouble(), sc.nextDouble(), sc.nextDouble());
            arr.add(x);
        }
        int chiTieu = sc.nextInt();
        arr.sort( new Student.Ss() );
        double res = arr.get(chiTieu-1).getTongDiem();
        System.out.printf("%.1f\n", res);
        for ( Student x : arr ){
            if ( x.getTongDiem() >= res ){
                System.out.println( x + " TRUNG TUYEN" );
            }else{
                System.out.println(x + " TRUOT" );
            }
        }
    }
}

controller/Student.java
package controller;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Comparator;
import java.util.Date;

public class Student {
    private String id, name;
    private double tongDiem, diemUuTien;
    public Student(String id, String name, double toan, double ly, double hoa){
        this.id = id;
        this.name = name;
        this.diemUuTien = tinhDiem(id.charAt(2));
        this.tongDiem = toan * 2 + ly + hoa + diemUuTien;
    }

    String convert(double a){
        if ( a - (int) a == 0.0f ){
            return String.format("%.0f", a);
        }
        return String.format("%.1f", a);
    }

    double tinhDiem(char a){
        if ( a == '1' ) return 0.5;
        if ( a == '2' ) return 1;
        return 2.5;
    }

    public double getTongDiem() {
        return tongDiem;
    }

    @Override
    public String toString(){
        return id + " " + name + " " + convert(diemUuTien) + " " + convert(tongDiem);
    }

    static class Ss implements Comparator<Student>{
        public int compare(Student a, Student b){
            if ( a.tongDiem == b. tongDiem ) return a.id.compareTo(b.id);
            return a.tongDiem < b.tongDiem ? 1 : -1;
        }
    }

}

