controller/Main.java
package controller;

import java.util.*;


public class Main {
    static Map<String,Integer> map = new HashMap<>();

    public static String xuLy(String chucVu){
        if ( chucVu.equals("GD") ){
            if ( map.containsKey("GD") ) return "NV";
            else{
                map.put("GD",1);
                return "GD";
            }
        }
        if ( chucVu.equals("TP") ){
            if ( map.containsKey("TP") ){
                int cnt = map.get("TP");
                if ( cnt > 2 ) return "NV";
                else {
                    map.put("TP",cnt+1);
                    return "TP";
                }
            }else {
                map.put("TP", 1);
                return "TP";
            }
        }
        if ( chucVu.equals("PP") ){
            if ( map.containsKey("PP") ){
                int cnt = map.get("PP");
                if ( cnt > 2 ) return "NV";
                else map.put("PP",cnt+1);
                return "PP";
            }else {
                map.put("PP", 1);
                return "PP";
            }
        }
        return "NV";
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = Integer.parseInt(sc.nextLine());
        ArrayList<NV> arr = new ArrayList<>();
        for ( int i = 0; i < t; i++ ){
            String ma = sc.nextLine();
            String chucVu = xuLy(ma.substring(0,2));
            String ten = ma.substring(8);
            ma = ma.substring(2,7);
            NV x = new NV(chucVu, ma, ten );
            arr.add(x);
        }
        arr.sort( new NV.Ss() );
        t = Integer.parseInt(sc.nextLine());
        for ( int i = 0; i < t; i++ ){
            String x = sc.nextLine();
            for ( NV nv : arr ){
                if ( nv.getMaChucVu().equals(x) ){
                    System.out.println(nv);
                }
            }
            System.out.println();
        }
    }
}

controller/NV.java
package controller;

import java.util.Comparator;

public class NV {
    private String ten, maChucVu, soHieu, bacLuong;
    public NV(String maChucVu, String ma, String ten){
        this.ten = ten;
        this.maChucVu = maChucVu;
        this.soHieu = ma.substring(2);
        this.bacLuong = ma.substring(0,2);
    }

    public String getMaChucVu() {
        return maChucVu;
    }

    @Override
    public String toString(){
        return ten + " " + maChucVu + " " + soHieu + " " + bacLuong;
    }

    static class Ss implements Comparator<NV>{
        public int compare(NV a, NV b){
            if ( b.bacLuong.equals(a.bacLuong) ) return a.soHieu.compareTo(b.soHieu);
            return b.bacLuong.compareTo(a.bacLuong);
        }
    }
}

