GG/IntSet.java
package GG;

import java.util.Set;
import java.util.TreeSet;

public class IntSet {
    private Set<Integer> res = new TreeSet<>();
    public IntSet(int a[]){
        for ( int i = 0; i < a.length; i++ ){
            res.add(a[i]);
        }
    }

    public IntSet intersection( IntSet a ){
        Set<Integer> tmp = new TreeSet<>();
        for ( int x : this.res ){
            if ( a.res.contains(x) == true ){
                tmp.add(x);
            }
        }
        int l = tmp.size(), dnt = 0;
        int k[] = new int[l];
        for ( int x : tmp ){
            k[dnt] = x;
            dnt++;
        }
        IntSet r = new IntSet(k);
        return r;
    }
    @Override
    public String toString(){
        String res = "";
        for ( int x : this.res ){
            res += String.valueOf(x) + " ";
        }
        return res;
    }

}


GG/Main.java
package GG;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;


public class Main {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(new File("DATA.in"));
        int n = sc.nextInt(), m = sc.nextInt(), a[] = new int[n], b[] = new int[m];
        for(int i = 0; i<n; i++) a[i] = sc.nextInt();
        for(int i = 0; i<m; i++) b[i] = sc.nextInt();
        IntSet s1 = new IntSet(a);
        IntSet s2 = new IntSet(b);
        IntSet s3 = s1.intersection(s2);
        System.out.println(s3);
    }
    public static void main6911885(String[] args) throws IOException {
        Scanner sc = new Scanner(new File("DATA.in"));
        int n = sc.nextInt(), m = sc.nextInt(), a[] = new int[n], b[] = new int[m];
        for(int i = 0; i<n; i++) a[i] = sc.nextInt();
        for(int i = 0; i<m; i++) b[i] = sc.nextInt();
        IntSet s1 = new IntSet(a);
        IntSet s2 = new IntSet(b);
        IntSet s3 = s1.intersection(s2);
        System.out.println(s3);
    }
}


