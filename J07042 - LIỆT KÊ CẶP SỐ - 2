GG/Main.java
package test;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.SortedSet;
import java.util.*;

public class Main {

    public static int gcd(int x, int y){
        int tmp;
        while(y != 0) {
            tmp = x % y;
            x = y;
            y = tmp;
        }
        return x;
    }

    public static void main(String[] args) throws IOException, ClassNotFoundException {
        ObjectInputStream sc = new ObjectInputStream( new FileInputStream("DATA.in"));
        ArrayList<Pair> list = (ArrayList<Pair>)sc.readObject();
        LinkedHashSet<Pair> set = new LinkedHashSet<>();
        for(int i = 0; i < list.size(); i++){
            int a = list.get(i).getFirst();
            int b = list.get(i).getSecond();
            if( a < b && gcd(a,b) == 1 ){
                set.add(list.get(i));
            }
        }
        ArrayList<Pair> res = new ArrayList<>(set);
        Collections.sort(res);
        for(Pair x : res){
            System.out.println(x);
        }
    }

}

GG/Pair.java
package test;
import java.io.*;

public class Pair implements Serializable, Comparable<Pair>{
    private int first, second;
    public Pair(int first, int second) {
        this.first = first;
        this.second = second;
    }
    public int getFirst() {
        return first;
    }
    public int getSecond() {
        return second;
    }
    @Override
    public int compareTo(Pair o) {
        return this.first - o.first;
    }
    public String toString(){
        return "(" + first + ", " + second + ")";
    }
}
