/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package ptit;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;

/**
 *
 * @author nguyen
 */

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int tests = input.nextInt();
        while (tests-- > 0) {
            int n = input.nextInt();
            int[] a = new int[n+1];
            for (int i= 0; i < n; i++) a[i] = input.nextInt();
            a[n] = -1;
            
            Stack<Integer> st = new Stack<>();
            int i = 0;
            long ans = 0;
            while (i < n+1) {
                if (st.isEmpty()|| a[i] >= a[st.peek()]) {
                    st.push(i);
                    i++;
                }
                else {
                    int top = st.peek(); st.pop();
                    if (st.isEmpty()) ans = Math.max(ans, (long)a[top]*i);
                    else ans = Math.max(ans,(long) a[top] * (i - st.peek()-1));
                }
            }
            System.out.println(ans);
        }
    }
}
